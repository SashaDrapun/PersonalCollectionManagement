@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["Settings"];
}

<div class="m-3">
    <h2 class="text-@ViewBag.Text">@Localizer["ProfileSettings"]</h2>

    <form asp-controller="Settings" asp-action="ChangeLanguage">
        <p class="text-@ViewBag.Text">@Localizer["ChooseLanguage"]</p>
        <select class="text-@ViewBag.Text bg-@ViewBag.Bg languageSelect">
            @if (ViewBag.Language == "ru")
            {
                <option selected>@Localizer["Russian"]</option>
                <option>@Localizer["English"]</option>
            }
            else
            {
                <option>@Localizer["Russian"]</option>
                <option selected>@Localizer["English"]</option>
            }
        </select>

        <input class="d-none"
               name="language"
               id="languageValue"
               value="@ViewBag.Language">

        <button type="submit" class="btn btn-primary">@Localizer["SaveChanges"]</button>
    </form>

    <form asp-controller="Settings" asp-action="ChangeTheme">
        <p class="text-@ViewBag.Text">@Localizer["ChooseATopic"]</p>
        <select class="text-@ViewBag.Text bg-@ViewBag.Bg themeSelect">
            @if (ViewBag.Bg == "dark")
            {
            <option selected>@Localizer["Dark"]</option>
            <option>@Localizer["Light"]</option>
            }
            else
            {
                <option>@Localizer["Dark"]</option>
                <option selected>@Localizer["Light"]</option>
            }

        </select>
        <input class="d-none"
               name="theme"
               value="@ViewBag.Bg"
               id="ThemeValue">
        <button type="submit" class="btn btn-primary">@Localizer["SaveChanges"]</button>
    </form>
</div>

<script src="~/js/settings.js"></script>